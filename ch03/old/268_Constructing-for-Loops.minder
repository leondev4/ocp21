<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="642082389" etag="118863565">
  <theme name="default" label="Light" index="-1"/>
  <styles>
    <style level="0" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="10" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="-124.79687499999991" posy="394.20833333333337" width="227" height="49" side="left" fold="false" treesize="913" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Constructing for Loops**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="1" posx="202.20312499999991" posy="-37.791666666666629" width="647" height="91" side="right" fold="false" treesize="91" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="617" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="629.10416666666674">
            <text data="There are two types of `for` loops, although both use the same `for` keyword. The first is referred to as the basic `for` loop, and the second is often called the enhanced `for` loop. For clarity, we refer to them as the `for` loop and the for-each loop, respectively,"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="2" posx="202.20312499999991" posy="53.208333333333371" width="478" height="112" side="right" fold="false" treesize="112" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="505" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="465.0078125">
            <text data="**The `for` Loop**&#10;A basic `for` loop has the same termination condition expression as the `while` loops, as well as two new sections: an initialization block and an update statement (See 268_figure_3_10.png)."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="3" posx="780.20312500000023" posy="53.208333333333371" width="315" height="112" side="right" fold="false" treesize="112" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="328" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="292.85156249999989">
                <text data="Each of the three sections is separated by a semicolon. In addition, the initialization and update sections may contain multiple statements, separated by commas."/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="4" posx="1195.203125" posy="53.208333333333371" width="430" height="112" side="right" fold="false" treesize="112" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="383" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="404.55729166666663">
                    <text data="Variables declared in the initialization block of a `for` loop have limited scope and are accessible only within the `for` loop.  For example, this code does not compile because the loop variable `i` is referenced outside the loop:"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="5" posx="1725.2031250000002" posy="65.208333333333371" width="410" height="88" side="right" fold="false" treesize="112" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="383" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="383">
                        <text data="`for(**int i=0**; i &lt; 10; i++)&#10;  System.out.println(&quot;Value is: &quot;+i);&#10;System.out.println(i); // DOES NOT COMPILE`"/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="6" posx="2235.2031250000005" posy="53.208333333333371" width="410" height="112" side="right" fold="false" treesize="112" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="383" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="383">
                            <text data="Variables declared before the `for` loop and assigned a value in the initialization block may be used outside the `for` loop because their scope precedes the creation of the `for` loop."/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="7" posx="2745.2031250000005" posy="56.208333333333371" width="361" height="106" side="right" fold="false" treesize="106" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="383" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="383">
                                <text data="`**int i;**&#10;for(i = 0; i &lt; 10; i++)&#10;  System.out.println(&quot;Value is: &quot;+i);&#10;System.out.println(i);`"/>
                              </nodename>
                              <nodenote></nodenote>
                            </node>
                          </nodes>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="8" posx="202.20312499999991" posy="228.20833333333337" width="399" height="70" side="right" fold="false" treesize="196" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="505" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="505">
            <text data="Let&#x2019;s take a look at an example that prints the first five&#10;numbers, starting with zero:"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="9" posx="701.20312500000023" posy="219.20833333333337" width="311" height="88" side="right" fold="false" treesize="196" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="505" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="505">
                <text data="`**for(int i = 0; i &lt; 5; i++)**{&#10;    System.out.print(i + &quot; &quot;);&#10;}`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="10" posx="1112.2031249999998" posy="165.20833333333337" width="563" height="196" side="right" fold="false" treesize="196" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="526" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="535.345703125">
                    <text data="The local variable `i` is initialized first to `0`. The variable `i` is only in scope for the duration of the loop and is not available outside the loop once the loop has completed. Like a `while` loop, the `boolean` condition is evaluated on every iteration of the loop before the loop executes. Since it returns `true`, the loop executes and outputs `0` followed by a space. Next, the loop executes the update section, which in this case increases the value of `i` to `1`. The loop then evaluates the `boolean` expression a second time, and the process repeats multiple times, printing the following:  `0 1 2 3 4`"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="12" posx="1775.2031250000002" posy="207.20833333333337" width="543" height="112" side="right" fold="false" treesize="112" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="526" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="525.896484375">
                        <text data="On the fifth iteration of the loop, the value of `i` reaches `4` and is incremented by `1` to reach `5`. On the sixth iteration of the loop, the `boolean` expression is evaluated, and since `(5 &lt;5)` returns `false`, the loop terminates without executing the statement loop body."/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="13" posx="202.20312499999991" posy="391.20833333333337" width="344" height="91" side="right" fold="false" treesize="151" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="397" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="380.03125">
            <text data="**Printing Elements in Reverse**&#10;The goal is to print `4 3 2 1 0`.  An initial implementation might look like the following:"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="14" posx="646.20312500000023" posy="371.70833333333337" width="482" height="130" side="right" fold="false" treesize="151" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="460" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="456.84374999999977">
                <text data="`**for (var counter = 5; counter &gt; 0; counter--)**{&#10;    System.out.print(counter + &quot; &quot;);&#10;}`&#10;This is the output:&#10;`5 4 3 2 1`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="16" posx="1228.2031250000002" posy="361.20833333333337" width="473" height="151" side="right" fold="false" treesize="151" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="460" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="460">
                    <text data="Let&#x2019;s fix that by starting with `4` instead:&#10;`for(**var counter = 4**; counter&gt; 0; counter--) {&#10;   System.out.print(counter + &quot; &quot;);&#10;}`&#10; It prints the following:&#10;`4 3 2 1`"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="18" posx="1801.2031250000002" posy="382.20833333333337" width="473" height="109" side="right" fold="false" treesize="112" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="460" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="460">
                        <text data="We need to update the termination condition, like this:&#10;`for(var counter = 4;**counter &gt;= 0;**counter--) {&#10;  System.out.print(counter + &quot; &quot;);&#10;}`"/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="19" posx="2374.2031250000005" posy="380.70833333333337" width="392" height="112" side="right" fold="false" treesize="112" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="384" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="370.3203125">
                            <text data="Finally! We have code that now prints `4 3 2 1 0`. We could have instead used `counter &gt; -1` as the loop termination condition in this example, although `counter &gt;= 0` tends to be more readable."/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="20" posx="2866.2031250000005" posy="380.70833333333337" width="342" height="112" side="right" fold="false" treesize="112" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="329" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="317.7265625">
                                <text data="If you do see a `for` loop with a decrement&#10;operator on the exam, you should assume they are trying to test your knowledge of loop operations."/>
                              </nodename>
                              <nodenote></nodenote>
                            </node>
                          </nodes>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="21" posx="202.20312499999991" posy="587.70833333333337" width="365" height="88" side="right" fold="false" treesize="239" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="397" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="397">
            <text data="1.  **Creating an Infinite Loop**`&#10;for ( ; ; )&#10;   System.out.println(&quot;Hello World&quot;);`"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="22" posx="667.20312500000023" posy="554.70833333333337" width="480" height="154" side="right" fold="false" treesize="239" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="427" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="454.86979166666674">
                <text data="Although this `for` loop may look like it does not compile, it will in fact compile and run without issue. It is actually an infinite loop that will print the same statement repeatedly. This example reinforces the fact that the components of the `for` loop are each optional. Note that the semicolons separating the three sections are required, as `for()` without any semicolons will not compile."/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="23" posx="1247.2031250000002" posy="569.70833333333337" width="514" height="124" side="right" fold="false" treesize="239" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="494.23697916666663">
                    <text data="2. **Adding Multiple Terms to the for Statement**`&#10;int x = 0;&#10;for**(long y = 0, z = 4; x &lt; 5 &amp;&amp; y &lt; 10; x++, y++)**{&#10;  System.out.print(y + &quot; &quot;); } //0 1 2 3 4&#10;System.out.print(x + &quot; &quot;);//5`"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="24" posx="1861.2031250000002" posy="544.20833333333337" width="512" height="175" side="right" fold="false" treesize="239" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="494">
                        <text data="This code demonstrates three variations of the `for` loop you may not have seen. First, you can declare a variable, such as `x` in this example, before the loop begins and use it after it completes. Second, your initialization block, `boolean` expression, and update statements can include extra variables that may or may not reference each other. For example, `z` is defined in the initialization block and is never used.&#10;Finally, the update statement can modify multiple variables."/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="25" posx="2473.2031250000005" posy="512.20833333333337" width="478" height="106" side="right" fold="false" treesize="106" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="494">
                            <text data="3. **Redeclaring a Variable in the Initialization Block**`&#10;**int x = 0;**&#10;for(**int x = 4**; x &lt; 5; x++) // DOES NOT COMPILE&#10;  System.out.print(x + &quot; &quot;);`"/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="27" posx="3051.2031250000005" posy="530.20833333333337" width="359" height="70" side="right" fold="false" treesize="70" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="344" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="337.3671875">
                                <text data="We can fix this loop by removing the declaration of `x` from the for loop as follows:"/>
                              </nodename>
                              <nodenote></nodenote>
                            </node>
                          </nodes>
                        </node>
                        <node id="26" posx="2473.2031250000005" posy="618.20833333333337" width="516" height="133" side="right" fold="false" treesize="133" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="494">
                            <text data="This example looks similar to the previous one, but it does not compile because of the initialization block. The difference is that the declaration of `x` is repeated in the initialization block after already being declared&#10;before the loop, resulting in the compiler stopping because of a duplicate variable declaration."/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="28" posx="3089.2031250000005" posy="640.70833333333337" width="284" height="88" side="right" fold="false" treesize="88" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="494">
                                <text data="`**int x = 0;**&#10;  for( ; x &lt; 5; x++)&#10;    System.out.print(x+&quot; &quot;);`"/>
                              </nodename>
                              <nodenote></nodenote>
                            </node>
                          </nodes>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="29" posx="202.20312499999991" posy="760.20833333333337" width="514" height="106" side="right" fold="false" treesize="124" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="481" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="487.69531249999989">
            <text data="4. **Using Incompatible Data Types in the Initialization Block**`&#10;int x = 0;&#10;for(**long y=0,int z=4;**x&lt;5; x++) // DOES NOT COMPILE&#10;  System.out.print(y + &quot; &quot;);`"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="30" posx="816.20312500000023" posy="757.20833333333337" width="503" height="112" side="right" fold="false" treesize="124" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="481" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="481">
                <text data="This code will not compile. The variables in the initialization block must all be of the same type. In the second example, `y` and `z` were both `long`, so the code compiled without issue; but in this example, they have different types, so the code will not compile."/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="31" posx="1419.203125" posy="760.20833333333337" width="505" height="106" side="right" fold="false" treesize="124" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="481" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="481">
                    <text data="5. **Using Loop Variables Outside the Loop**`&#10;for (long y = 0,**x = 4;** x &lt; 5 &amp;&amp; y &lt; 10; x++, y++)&#10;  System.out.print(y + &quot; &quot;);&#10;System.out.print(x); // DOES NOT COMPILE`"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="32" posx="2024.2031249999998" posy="767.70833333333337" width="503" height="91" side="right" fold="false" treesize="124" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="481" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="481">
                        <text data=" If you notice, `x` is defined in the initialization block of the loop and then used after the loop terminates. Since `x` was scoped only for the loop, using it outside the loop will cause a compiler error."/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="33" posx="2627.2031250000005" posy="757.20833333333337" width="413" height="112" side="right" fold="false" treesize="124" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="481" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="481">
                            <text data="**Modifying Loop Variables**&#10;As a general rule, it is considered a poor coding practice&#10;to modify loop variables as it can lead to an unexpected&#10;result"/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="34" posx="3140.2031250000005" posy="751.20833333333337" width="415" height="124" side="right" fold="false" treesize="124" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="481" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="481">
                                <text data="`for(int i=0; i&lt;10; i++) //Infinite Loop&#10;**i = 0;**&#10;&#10;for(int j=1; j&lt;10; j++) // Iterates 5 times&#10;**j++;**`"/>
                              </nodename>
                              <nodenote></nodenote>
                            </node>
                          </nodes>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <stickers/>
  <nodelinks id="0"/>
</minder>
