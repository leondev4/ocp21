<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="2292174051" etag="1154662380">
  <theme name="default" label="Light" index="-1"/>
  <styles>
    <style level="0" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="10" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="300.634765625" posy="443.2890625" width="215" height="49" side="left" fold="false" treesize="1092" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Introducing `switch`**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="1" posx="615.634765625" posy="56.7890625" width="496" height="70" side="right" fold="false" treesize="340" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="441" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="479.439453125">
            <text data="A `switch` is a complex decision-making structure in which a single value is evaluated and flow is redirected to one or more branches."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="2" posx="1211.634765625" posy="46.2890625" width="510" height="91" side="right" fold="false" treesize="340" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="455" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="482.5078125">
                <text data="There are two flavors: a `switch` statement and a `switch` expression. The primary difference between the two is that a `switch` expression must return a value, while a `switch` statement does not."/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="3" posx="1821.634765625" posy="67.2890625" width="230" height="49" side="right" fold="false" treesize="340" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="455" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="455">
                    <text data="Example of switch statement:"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="4" posx="2151.634765625" posy="-78.2109375" width="460" height="340" side="right" fold="false" treesize="340" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="459" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="459.21011627906978">
                        <text data="`String getAnimalBetter(int type){&#10;  String animal;&#10;**switch(type)**{&#10;  **case 0:**&#10;      animal = &quot;Lion&quot;;&#10;      break;&#10;  **case 1:**&#10;      animal = &quot;Elephant&quot;;&#10;      break;&#10;  **case 2,3:**//separated by commas, not colons&#10;      animal = &quot;Alligator&quot;;&#10;      break;&#10;  **default:**&#10;      animal = &quot;Unknown&quot;;&#10;  }&#10;  return animal;&#10;}`"/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="5" posx="2711.634765625" posy="-65.7109375" width="451" height="49" side="right" fold="false" treesize="49" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="459" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="459">
                            <text data="The `break` in `default` is not required since it is at the end."/>
                          </nodename>
                          <nodenote></nodenote>
                        </node>
                        <node id="6" posx="2711.634765625" posy="-16.7109375" width="514" height="70" side="right" fold="false" treesize="70" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="516" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="507.9437790697674">
                            <text data="It&#x2019;s really long. We&#x2019;re assigning `animal` tree times, and what&#x2019;s with all the break statements?. Let&#x2019;s try using a `switch` expression instead."/>
                          </nodename>
                          <nodenote></nodenote>
                        </node>
                        <node id="7" posx="2711.634765625" posy="53.2890625" width="320" height="196" side="right" fold="false" treesize="196" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="516" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="516">
                            <text data="`String getAnimalBest(int type) {&#10;  return**switch(type)**{&#10;  **case 0-&gt;**&quot;Lion&quot;;&#10;  **case 1-&gt;**&quot;Elephant&quot;;&#10;  **case 2, 3-&gt;**&quot;Alligator&quot;;&#10;  **case 4-&gt;**&quot;Crane&quot;;&#10;  **default-&gt;**&quot;Unknown&quot;;&#10;**};**&#10;}`"/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="8" posx="3131.634765625" posy="105.7890625" width="498" height="91" side="right" fold="false" treesize="91" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="470" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="470.17613372093024">
                                <text data="That is a lot shorter and easier to read! In Java, `switch` expressions were introduced more recently than `switch` statements, resulting in a greater emphasis on reducing boilerplate."/>
                              </nodename>
                              <nodenote></nodenote>
                            </node>
                          </nodes>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="9" posx="615.634765625" posy="355.7890625" width="407" height="112" side="right" fold="false" treesize="300" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="401" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="379.078125">
            <text data="**Defining a `switch`**&#10;Both types begin with a `switch` keyword and a variable in parentheses, followed by a pair of braces. In switch expression semicolon is required at the end."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="10" posx="1122.634765625" posy="269.7890625" width="505" height="160" side="right" fold="false" treesize="176" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="480" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="482.77864583333326">
                <text data="`String name = &quot;123&quot;;&#10;&#10;**switch(name){**//           Switch statement&#10;  **case &quot;Sancha&quot;:**System.out.print(1);       break;&#10;  **case &quot;Jacob&quot;,&quot;Jake&quot;:**System.out.print(2); break;&#10;  **default:**System.out.print(999);           break;&#10;**}**`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="12" posx="1727.634765625" posy="272.7890625" width="507" height="154" side="right" fold="false" treesize="176" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="480" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="480">
                    <text data="Both types of `switch` support zero or more `case` clauses. Each `case` clause includes a set of matching values split up by commas (`,`). It is then followed by a separator, which can be a colon (`:`) or the arrow operator (`-&gt;`). Finally, each clause then defines an expression, or code block with braces (`{}`), for what to execute when there&#x2019;s a match. Note that only `switch` statement has `break`."/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="14" posx="2334.634765625" posy="283.2890625" width="505" height="133" side="right" fold="false" treesize="176" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="480" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="480">
                        <text data="**Using the Arrow Operator with switch Statements**&#10;While switch statements support both colons and arrow operators, you&#x2019;re likely to see them used with colons more often in practice. **If you do use the arrow operator, then you must use it for all clauses**."/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="15" posx="2939.634765625" posy="261.7890625" width="261" height="70" side="right" fold="false" treesize="70" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="260" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="245.92968749999994">
                            <text data="The following `switch` statement does not compile:"/>
                          </nodename>
                          <nodenote></nodenote>
                        </node>
                        <node id="16" posx="2939.634765625" posy="331.7890625" width="397" height="106" side="right" fold="false" treesize="106" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="480" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="480">
                            <text data="`switch (type) {&#10;  case 0 : System.out.print(&quot;Lion&quot;);&#10;  case 1 -&gt; System.out.print(&quot;Elephant&quot;);&#10;}`"/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="17" posx="3436.634765625" posy="349.7890625" width="369" height="70" side="right" fold="false" treesize="70" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="480" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="480">
                                <text data="This would compile if both clauses used the same&#10;separator."/>
                              </nodename>
                              <nodenote></nodenote>
                            </node>
                          </nodes>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
            <node id="11" posx="1122.634765625" posy="437.7890625" width="437" height="124" side="right" fold="false" treesize="124" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="429" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="429.74218749999989">
                <text data="`var n =**switch(name)**{ // Switch expression&#10;  **case &quot;Sancha&quot;        -&gt;**1;&#10;  **case &quot;Jacob&quot;, &quot;Jake&quot; -&gt;**2;&#10;  **default              -&gt;**999;&#10;**};**`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="13" posx="1659.634765625" posy="454.2890625" width="433" height="91" side="right" fold="false" treesize="91" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="429" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="429">
                    <text data="Both `switch` types support an optional `default` clause. With `switch` expressions, a `default` clause is often required, as the expression must return a value. "/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="26" posx="2192.634765625" posy="454.2890625" width="430" height="91" side="right" fold="false" treesize="91" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="429" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="429">
                        <text data="A `switch` statement is not required to contain any `case`&#10;clauses. This is perfectly valid:&#10;`switch (month) {}`"/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="18" posx="615.634765625" posy="572.2890625" width="449" height="91" side="right" fold="false" treesize="112" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="426" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="433.0390625">
            <text data="Figure (238_figure_3_4.png) shows the structure of a `switch` statement. While `switch` statements can use the arrow operator, they are more commonly written with colons."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="19" posx="1164.634765625" posy="572.2890625" width="337" height="91" side="right" fold="false" treesize="112" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="329" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="315.88802083333326">
                <text data="Figure (238_figure_3_5.png) shows the structure of a `switch` expression, which returns a value that is assigned to a variable. "/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="20" posx="1601.634765625" posy="561.7890625" width="387" height="112" side="right" fold="false" treesize="112" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="360" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="366.66927083333337">
                    <text data="Unlike a `switch` statement, a `switch` expression often requires a semicolon (`;` ) after it, such as when it is used with the assignment operator (`=`) or a `return` statement."/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="21" posx="2088.634765625" posy="561.7890625" width="377" height="112" side="right" fold="false" treesize="112" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="360" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="360">
                        <text data="A `switch` expression also requires a semicolon (`;`) after each `case` expression that doesn&#x2019;t use a block. For example, how many semicolons are missing in the following?"/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="22" posx="2565.634765625" posy="564.7890625" width="284" height="106" side="right" fold="false" treesize="106" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="360" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="360">
                            <text data="`var result = switch (bear) {&#10;   case 30 -&gt; &quot;Grizzly&quot;&#10;   default -&gt; &quot;Panda&quot;&#10;}`"/>
                          </nodename>
                          <nodenote></nodenote>
                          <nodes>
                            <node id="23" posx="2949.634765625" posy="572.2890625" width="349" height="91" side="right" fold="false" treesize="106" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="360" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                              <nodename maxwidth="360">
                                <text data="The answer is three. Each `case` or `default` expression requires a semicolon as well as the assignment itself. The following fixes the code:"/>
                              </nodename>
                              <nodenote></nodenote>
                              <nodes>
                                <node id="24" posx="3398.634765625" posy="564.7890625" width="284" height="106" side="right" fold="false" treesize="106" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="360" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                                  <nodename maxwidth="360">
                                    <text data="`var result = switch (bear) {&#10;case 30 -&gt; &quot;Grizzly&quot;;&#10;default -&gt; &quot;Panda&quot;;&#10;};`"/>
                                  </nodename>
                                  <nodenote></nodenote>
                                </node>
                              </nodes>
                            </node>
                          </nodes>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="25" posx="615.634765625" posy="808.7890625" width="298" height="70" side="right" fold="false" treesize="340" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="426" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="426">
            <text data="See if you can figure out which of these&#10;compiles:"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="27" posx="1013.634765625" posy="673.7890625" width="446" height="340" side="right" fold="false" treesize="340" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="426" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="426">
                <text data="`int food = 5, month = 4, weather = 2, day = 0, time = 4;&#10;&#10;String meal =**switch food { // #1**&#10;  case 1 -&gt; &quot;Dessert&quot;&#10;  default -&gt; &quot;Porridge&quot;&#10;};&#10;&#10;**switch (month) // #2**&#10;    case 4: System.out.print(&quot;January&quot;);&#10;&#10;**switch (weather) { // #3**&#10;    case 2: System.out.print(&quot;Rainy&quot;);&#10;    case 5: {&#10;     System.out.print(&quot;Sunny&quot;);&#10;   }&#10;}`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="29" posx="1559.634765625" posy="756.2890625" width="482" height="175" side="right" fold="false" treesize="214" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="451" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="460.96354166666652">
                    <text data="The**first statement**does not compile because the `switch` expression is missing parentheses around the `switch` variable, as well as semicolons after the `case` and `default` clauses. The**second statement**does not compile because it is missing braces around the `switch` body. The**third statement**does compile. Notice that a `case` clause can use an expression or a code block with braces."/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="28" posx="2141.634765625" posy="736.7890625" width="424" height="214" side="right" fold="false" treesize="214" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="426" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="426">
                        <text data="`**switch (day) { // #4**&#10;    case 1: 13: System.out.print(&quot;January&quot;);&#10;    default&#10;     System.out.print(&quot;July&quot;);&#10;}&#10;&#10;String description =**switch (time){ // #5**&#10;  case 10 -&gt; &quot;Morning&quot;;&#10;  default -&gt; &quot;Late&quot;;&#10;}`"/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="30" posx="2665.634765625" posy="766.7890625" width="448" height="154" side="right" fold="false" treesize="154" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="426" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="426">
                            <text data="The**fourth statement**does not compile for two reasons. The `case` clause should use a comma (`,`) to separate two values, not a colon (`:`). It&#x2019;s also missing a colon after the `default` clause. The**last statement**does not compile because the assignment operator (`=`) is missing a semicolon (`;`) at the end."/>
                          </nodename>
                          <nodenote></nodenote>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <stickers/>
  <nodelinks id="0"/>
</minder>
