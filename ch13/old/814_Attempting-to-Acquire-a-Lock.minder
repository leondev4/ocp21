<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="1770133699" etag="1197954219">
  <theme name="default" label="Light" index="4"/>
  <styles>
    <style level="0" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="rounded" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="10" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="867.5" posy="544.5" width="219" height="70" side="left" fold="false" treesize="1149" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Attempting to Acquire a Lock**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="1" posx="266.5" posy="489" width="501" height="181" side="left" fold="false" treesize="181" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="469" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="475.796875">
            <text data="We use the following printHello() method for the code in this section:&#10;`public static void printHello(Lock lock) {&#10;  try{&#10;    **lock.lock();**&#10;    System.out.println(&quot;Hello&quot;);&#10;  }finally{&#10;    **lock.unlock();**&#10;} }`"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="2" posx="1186.5" posy="183.5" width="151" height="49" side="right" fold="false" treesize="406" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="469" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="469">
            <text data="**`tryLock()`**"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="3" posx="1437.5" posy="5" width="540" height="112" side="right" fold="false" treesize="112" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="496" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="517.966796875">
                <text data="The `tryLock()` method will attempt to acquire a lock and immediately return a `boolean` result indicating whether the lock was obtained. Unlike the `lock()` method, it does not wait if another thread already holds the lock. It returns immediately, regardless of whether a lock is available."/>
              </nodename>
              <nodenote></nodenote>
            </node>
            <node id="4" posx="1437.5" posy="148" width="658" height="232" side="right" fold="false" treesize="294" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="618" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="631.0646695859873">
                <text data="`Lock lock = new ReentrantLock();&#10;new Thread(() -&#xAD;&gt;**printHello(lock)**).start();&#10;if(**lock.tryLock()**) {&#10;  try{&#10;    System.out.println(&quot;Lock obtained, entering protected code&quot;);&#10;  }finally {&#10;    **lock.unlock();**&#10;  }&#10;}else {&#10;   System.out.println(&quot;Unable to acquire lock, doing something else&quot;);&#10;}`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="5" posx="2195.5" posy="117" width="627" height="91" side="right" fold="false" treesize="91" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="618" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="618">
                    <text data="When you run this code, it could produce either the `if` or `else` message, depending&#10;on the order of execution. It will always print `Hello`, though, as the call to `lock()` in&#10;`printHello()` will wait indefinitely for the lock to become available."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
                <node id="6" posx="2195.5" posy="208" width="660" height="112" side="right" fold="false" treesize="112" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="627" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="635.52671178343951">
                    <text data="Like `lock()`, the `tryLock()` method should be used with a `try`/`finally` block. Fortunately, you need to release the lock only if it was successfully acquired. For this reason, it is common to use the output of `tryLock()` in an `if` statement, so that `unlock()` is called only when the lock is obtained."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
                <node id="7" posx="2195.5" posy="320" width="666" height="91" side="right" fold="false" treesize="91" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="633" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="645.8937300955414">
                    <text data="It is imperative that your program always check the return value of the `tryLock()` method. It tells your program whether it is safe to proceed with the operation and whether the lock needs to be released later."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="8" posx="1186.5" posy="567.5" width="268" height="49" side="right" fold="false" treesize="362" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="469" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="469">
            <text data="**`tryLock(long,TimeUnit)`**"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="9" posx="1554.5" posy="411" width="497" height="112" side="right" fold="false" treesize="112" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="469" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="469">
                <text data="`tryLock(long,TimeUnit)` that acts like a hybrid of `lock()` and `tryLock()`.  If a lock is available, it will immediately return with it. If a lock is unavailable, though, it will wait up to the specified time limit for the lock."/>
              </nodename>
              <nodenote></nodenote>
            </node>
            <node id="10" posx="1554.5" posy="523" width="613" height="250" side="right" fold="false" treesize="250" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="592" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="615.07300955414019">
                <text data="`Lock lock = new ReentrantLock();&#10;new Thread(() -&#xAD;&gt;**printHello(lock)**).start();&#10;if(**lock.tryLock(10,TimeUnit.SECONDS)**){&#10;  try{&#10;    System.out.println(&quot;Lock obtained, entering protected code&quot;);&#10;  }finally {&#10;    **lock.unlock();**&#10;  }&#10;}else{&#10;  System.out.println(&quot;Unable to acquire lock, doing something else&quot;);&#10;}`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="11" posx="2267.5" posy="613" width="316" height="70" side="right" fold="false" treesize="70" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="592" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="592">
                    <text data="One of the threads waits up to 10 seconds&#10;to acquire the lock."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="12" posx="1186.5" posy="883" width="288" height="49" side="right" fold="false" treesize="269" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="469" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="469">
            <text data="**Acquiring the Same Lock Twice**"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="13" posx="1574.5" posy="851.5" width="481" height="112" side="right" fold="false" treesize="269" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="469" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="469">
                <text data="The `ReentrantLock` class maintains a counter of the number of times a lock has been successfully granted to a thread. To release the lock for other threads to use, `unlock()` must be called the same number of times the lock was granted."/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="14" posx="2155.5" posy="773" width="613" height="199" side="right" fold="false" treesize="199" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="571" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="585.33072916666663">
                    <text data="`Lock lock = new ReentrantLock();&#10;if(**lock.tryLock()**){&#10;  try{&#10;    **lock.lock();*&#10;    System.out.println(&quot;Lock obtained, entering protected code&quot;);&#10;  }finally{&#10;    **lock.unlock();**&#10;} }`&#10;The thread obtains the lock twice but releases it only once."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
                <node id="15" posx="2155.5" posy="972" width="597" height="70" side="right" fold="false" treesize="70" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="571" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="571">
                    <text data="_It is critical that you release a lock the same number of times it is acquired!_ For calls with `tryLock()`, you need to call `unlock()` only if the method returned `true`."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="16" posx="1186.5" posy="1073.5" width="300" height="49" side="right" fold="false" treesize="112" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="469" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="469">
            <text data="**Reviewing the `Lock` Framework**"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="17" posx="1586.5" posy="1042" width="921" height="112" side="right" fold="false" treesize="112" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="866" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="894.18430718315972">
                <text data="The `ReentrantLock` class supports the same features as a `synchronized` block while adding a number of improvements:&#10;1. Ability to request a lock without blocking.&#10;2. Ability to request a lock while blocking for a specified amount of time.&#10;3. A lock can be created with a `fairness` property, in which the lock is granted to threads in the order in which it was requested."/>
              </nodename>
              <nodenote></nodenote>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <stickers/>
  <nodelinks id="0"/>
</minder>
