<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="792015047" etag="3167529485">
  <theme name="default" label="Light" index="-1"/>
  <styles>
    <style level="0" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="10" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="118.203125" posy="446.05078125" width="227" height="70" side="left" fold="false" treesize="1042" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Using Common Intermediate Operations**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="1" posx="445.203125" posy="-39.94921875" width="402" height="49" side="right" fold="false" treesize="49" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Intermediate operation produces a stream as its result"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="2" posx="445.203125" posy="9.05078125" width="428" height="91" side="right" fold="false" treesize="91" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Filtering&#10;The `filter()` method returns a `Stream` with elements that match a given expression."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="3" posx="973.203125" posy="30.05078125" width="531" height="49" side="right" fold="false" treesize="88" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="510" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="510">
                <text data="`public Stream&lt;T&gt; filter(Predicate&lt;? super T&gt; predicate)`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="4" posx="1604.203125" posy="10.55078125" width="536" height="88" side="right" fold="false" treesize="88" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="510" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="510">
                    <text data="`Stream&lt;String&gt; s = Stream.of(&quot;alex&quot;, &quot;gloria&quot;, &quot;marty&quot;);&#10;s.**filter**(n-&gt;n.startsWith(&quot;a&quot;)).&#10;  forEach(System.out::println);//alex`"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="5" posx="445.203125" posy="100.05078125" width="447" height="112" side="right" fold="false" treesize="112" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Removing Duplicates&#10;The `distinct()` method returns a stream with duplicate values removed.  Java calls `equals()` to determine whether the objects are equivalent. "/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="6" posx="992.203125" posy="131.55078125" width="279" height="49" side="right" fold="false" treesize="88" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="419">
                <text data="`public Stream&lt;T&gt; distinct()`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="7" posx="1371.203125" posy="112.05078125" width="509" height="88" side="right" fold="false" treesize="88" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="501" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="501">
                    <text data="`Stream&lt;String&gt; s = Stream.of(&quot;alex&quot;, &quot;marty&quot;,&quot;alex&quot;);&#10;s.**distinct**().&#10;   forEach(System.out::print);//alexmarty`"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="8" posx="445.203125" posy="212.05078125" width="437" height="112" side="right" fold="false" treesize="112" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Restricting by Position&#10;The `limit()` and `skip()` methods can make a `Stream` smaller, or `limit()` could make a finite stream out of an infinite stream"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="9" posx="982.203125" posy="233.05078125" width="356" height="70" side="right" fold="false" treesize="106" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="419">
                <text data="`public Stream&lt;T&gt; limit(long maxSize)&#10;public Stream&lt;T&gt; skip(long n)`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="10" posx="1438.203125" posy="215.05078125" width="446" height="106" side="right" fold="false" treesize="106" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="419">
                    <text data="`Stream&lt;Integer&gt; s = Stream.iterate(1, n-&gt;n+2);&#10;s.**skip(3)**.&#10;  **limit(2)**.&#10;  forEach(System.out::print);//79`"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="11" posx="445.203125" posy="324.05078125" width="443" height="112" side="right" fold="false" treesize="112" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Mapping&#10;The `map()` method creates a one-&#xAD;to-&#xAD;one mapping from the elements in the stream to the elements of the next step in the stream. "/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="12" posx="988.203125" posy="345.05078125" width="446" height="70" side="right" fold="false" treesize="109" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="419">
                <text data="`public &lt;R&gt; Stream&lt;R&gt; map(Function&lt;? super T, ? extends R&gt; mapper)`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="13" posx="1534.203125" posy="325.55078125" width="536" height="109" side="right" fold="false" treesize="109" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="510" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="510">
                    <text data="`Stream&lt;String&gt; s = Stream.of(&quot;alex&quot;, &quot;gloria&quot;, &quot;marty&quot;);&#10;s.**map**(String::length). //n-&gt;n.length()&#10;  forEach(System.out::print);//465`&#10;Turns a `String` into an `Integer`."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="14" posx="445.203125" posy="479.55078125" width="420" height="91" side="right" fold="false" treesize="178" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="flatMap&#10;This is helpful when you want to remove empty elements from a stream or combine a stream of lists. "/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="15" posx="965.203125" posy="481.05078125" width="469" height="88" side="right" fold="false" treesize="178" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="445" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="455.1328125">
                <text data="`public &lt;R&gt; Stream&lt;R&gt; flatMap(&#10;   Function&lt;? super T, ? extends Stream&lt;? extends R&gt;&gt; mapper)`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="16" posx="1534.203125" posy="436.05078125" width="541" height="178" side="right" fold="false" treesize="178" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="532" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="533.171875">
                    <text data="`List&lt;String&gt; zero = List.of();&#10;var one = List.of(&quot;Bonobo&quot;);&#10;var two = List.of(&quot;Mama Gorilla&quot;, &quot;Baby Gorilla&quot;);&#10;&#10;Stream&lt;List&lt;String&gt;&gt; animals = Stream.of(zero, one, two);&#10;Stream&lt;String&gt; streamListAnimals = animals.&#10;  **flatMap(m -&gt; m.stream()**);&#10;streamListAnimals.forEach(System.out::println);`"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="17" posx="2175.203125" posy="470.55078125" width="158" height="109" side="right" fold="false" treesize="109" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="532" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="532">
                        <text data="  Here&#x2019;s the output:&#10;`Bonobo&#10;Mama Gorilla&#10;Baby Gorilla`"/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="18" posx="445.203125" posy="642.55078125" width="187" height="49" side="right" fold="false" treesize="106" color="#715344" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Concatenating Streams"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="19" posx="732.203125" posy="614.05078125" width="496" height="106" side="right" fold="false" treesize="106" color="#715344" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="496" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="497.09765625">
                <text data="`var one = Stream.of(&quot;Bonobo&quot;);&#10;var two = Stream.of(&quot;Mama Gorilla&quot;, &quot;Baby Gorilla&quot;);&#10;Stream.**concat(one, two)**&#10;  .forEach(System.out::println);`"/>
              </nodename>
              <nodenote></nodenote>
            </node>
          </nodes>
        </node>
        <node id="20" posx="445.203125" posy="752.05078125" width="440" height="112" side="right" fold="false" treesize="176" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Sorting&#10;The `sorted()` method returns a stream with the elements sorted. Java uses natural ordering unless we specify a `comparator`."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="21" posx="985.203125" posy="764.05078125" width="433" height="88" side="right" fold="false" treesize="176" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="467" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="464.28515625">
                <text data="`public Stream&lt;T&gt; sorted()&#10;public Stream&lt;T&gt; sorted(Comparator&lt;? super T&gt; comparator)`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="22" posx="1518.203125" posy="720.05078125" width="464" height="88" side="right" fold="false" treesize="88" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="467" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="467">
                    <text data="`Stream&lt;String&gt; s = Stream.of(&quot;brown-&#xAD;&quot;, &quot;bear-&#xAD;&quot;);&#10;s.**sorted()**&#10;  .forEach(System.out::print); // bear-&#xAD;brown-&#xAD;`"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
                <node id="23" posx="1518.203125" posy="808.05078125" width="545" height="88" side="right" fold="false" treesize="88" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="526" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="527.1796875">
                    <text data="`Stream&lt;String&gt; s = Stream.of(&quot;brown bear-&#xAD; &quot;, &quot;grizzly-&#xAD;&quot;);&#10;s.**sorted(Comparator.reverseOrder())**&#10;.forEach(System.out::print); // grizzly-&#xAD;brown bear-&#xAD;`"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="24" posx="445.203125" posy="903.55078125" width="442" height="91" side="right" fold="false" treesize="106" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="419" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="419">
            <text data="Taking a Peek&#10;The `peek()` is useful for debugging because it allows us to perform a stream operation without changing the stream."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="25" posx="987.203125" posy="924.55078125" width="477" height="49" side="right" fold="false" treesize="106" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="451" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="452.18359375">
                <text data="`public Stream&lt;T&gt; peek(Consumer&lt;? super T&gt; action)`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="26" posx="1564.203125" posy="896.05078125" width="590" height="106" side="right" fold="false" treesize="106" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="bracket" nodewidth="579" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="579">
                    <text data="`var stream = Stream.of(&quot;black bear&quot;, &quot;brown bear&quot;, &quot;grizzly&quot;);&#10;long count = stream.filter(s -&gt; s.startsWith(&quot;g&quot;))&#10;  .**peek**(System.out::println).count();  // grizzly&#10;System.out.println(count);                 // 1`"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <stickers/>
  <nodelinks id="0"/>
</minder>
