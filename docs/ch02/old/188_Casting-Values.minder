<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="2315213014" etag="487527222">
  <theme name="default" label="Light" index="-1"/>
  <styles>
    <style level="0" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="10" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="false" branchmargin="100" branchradius="25" linktype="straight" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="315.859375" posy="339.71875" width="166" height="49" side="left" fold="false" treesize="1063" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Casting Values**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="1" posx="581.859375" posy="-157.78125" width="510" height="154" side="right" fold="false" treesize="173" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="458" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="485.2578125">
            <text data="_Casting_ is a unary operation where one data type is explicitly interpreted as another data type. Casting is optional and unnecessary when converting to a larger or widening data type, but it is required when converting to a smaller or narrowing data type. Without casting, the compiler will generate an error when trying to put a larger data type inside a smaller one."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="2" posx="1191.859375" posy="-115.78125" width="467" height="70" side="right" fold="false" treesize="173" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="458" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="458">
                <text data="**Casting is performed by placing the data type, enclosed in parentheses, to the left of the value you want to cast.**"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="3" posx="1758.859375" posy="-167.28125" width="473" height="124" side="right" fold="false" treesize="124" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="458" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="458">
                    <text data="`int fur =**(int)**5;&#10;int hair =**(short)**2;&#10;String type =**(String)**&quot;Bird&quot;;&#10;short tail =**(short)**(4 + 10);&#10;long feathers = 10**(long)**; // DOES NOT COMPILE`"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="4" posx="2331.859375" posy="-161.28125" width="567" height="112" side="right" fold="false" treesize="112" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="529" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="551.96875">
                        <text data="Spaces between the cast and the value are optional. It is common for the right side to also be in parentheses. Since casting is a unary operation, it would only be applied to the `4` if we didn&#x2019;t enclose `4 + 10` in parentheses. The last example does not compile because the type is on the wrong side of the value."/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                  </nodes>
                </node>
                <node id="5" posx="1758.859375" posy="-43.28125" width="485" height="49" side="right" fold="false" treesize="49" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="458" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="458">
                    <text data="The compiler automatically casts smaller data types to larger ones."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="6" posx="581.859375" posy="14.71875" width="283" height="70" side="right" fold="false" treesize="88" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="312" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="277.625">
            <text data="See if you can figure out why none of the following lines of code compiles:"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="7" posx="964.859375" posy="5.71875" width="442" height="88" side="right" fold="false" treesize="88" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="392" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="415.669921875">
                <text data="`float egg = 2.0 / 9; // DOES NOT COMPILE&#10;int tadpole = (int)5 * 2L; // DOES NOT COMPILE&#10;short frog = 3 - 2.0; // DOES NOT COMPILE`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="8" posx="1506.859375" posy="14.71875" width="420" height="70" side="right" fold="false" treesize="70" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="392" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="392">
                    <text data="All of these examples involve putting a larger value into a&#10;smaller data type."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="9" posx="581.859375" posy="146.21875" width="306" height="70" side="right" fold="false" treesize="175" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="312" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="312">
            <text data="See if you can figure out why each of the following lines does not compile:"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="10" posx="987.859375" posy="128.21875" width="563" height="106" side="right" fold="false" treesize="175" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="530" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="535.58333333333337">
                <text data="`int fish = 1.0; // DOES NOT COMPILE&#10;short bird = 1921222; // DOES NOT COMPILE&#10;int mammal = 9f; // DOES NOT COMPILE&#10;long reptile = 192_301_398_193_810_323; // DOES NOT COMPILE`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="11" posx="1650.859375" posy="93.71875" width="784" height="175" side="right" fold="false" treesize="175" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="743" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="760.50520833333326">
                    <text data="The first statement does not compile because you are trying to assign a `double` `1.0` to an integer value. Even though the value is a mathematic integer, by adding `.0`, you&#x2019;re instructing the compiler to treat it as a `double`. The second statement does not compile because the literal value `1921222` is outside the range of `short`, and the compiler detects this. The third statement does not compile because the `f` added to the end of the number instructs the compiler to treat the number as a floating-point value, but the assignment is to an `int`. Finally, the last statement does not compile because Java interprets the literal as an `int` and notices that the value is larger than `int` allows. The literal would need a postfix `L` or `l` to be considered a `long`."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="12" posx="581.859375" posy="279.21875" width="457" height="91" side="right" fold="false" treesize="112" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="399" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="438.81770833333326">
            <text data="Casting primitives is required any time you are going from a larger numerical data type to a smaller numerical data type, or converting from a floating-point number to an integral value."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="13" posx="1138.859375" posy="280.71875" width="451" height="88" side="right" fold="false" treesize="112" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="450" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="451.55729166666663">
                <text data="`int fish = (int)1.0;&#10;short bird = (short)1921222; // Stored as 20678&#10;int mammal = (int)9f;`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="14" posx="1689.859375" posy="289.71875" width="576" height="70" side="right" fold="false" treesize="112" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="543" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="549.74739583333337">
                    <text data="What about applying casting to an earlier example?&#10;`long reptile = (long)192301398193810323; // DOES NOT COMPILE`"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="15" posx="2365.859375" posy="268.71875" width="468" height="112" side="right" fold="false" treesize="112" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="474" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="443.01302083333337">
                        <text data="This still does not compile because the value is first interpreted as an int by the compiler and is out of range. The following fixes this code without requiring casting:&#10;`long reptile = 192301398193810323L;`"/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="16" posx="581.859375" posy="456.21875" width="382" height="70" side="right" fold="false" treesize="221" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="399" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="399">
            <text data="Let&#x2019;s return to a similar example from the &#x201C;Numeric&#10;Promotion&#x201D;"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="17" posx="1063.859375" posy="447.21875" width="509" height="88" side="right" fold="false" treesize="221" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="490" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="494.8203125">
                <text data="`short mouse = 10;&#10;short hamster = 3;&#10;short capybara = mouse * hamster; // DOES NOT COMPILE`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="18" posx="1672.859375" posy="424.71875" width="502" height="133" side="right" fold="false" treesize="221" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="490" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="490">
                    <text data="As you may remember, `short` values are automatically promoted to `int` when applying any arithmetic operator, with the resulting value being of type `int`. Trying to assign a `short` variable with an `int` value results in a compiler error, as Java thinks you are trying to implicitly convert from a larger data type to a smaller one."/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="19" posx="2274.859375" posy="380.71875" width="415" height="91" side="right" fold="false" treesize="91" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="490" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="490">
                        <text data="In this example, we know the result of `10 * 3` is `30`,&#10;which can easily fit into a short variable, so we can apply&#10;casting to convert the result back to a `short`:"/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                    <node id="20" posx="2274.859375" posy="471.71875" width="410" height="130" side="right" fold="false" treesize="130" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="490" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="490">
                        <text data="`short mouse = 10;&#10;short hamster = 3;&#10;short capybara = (short)(mouse * hamster);`&#10;By casting a larger value into a smaller data type, you&#10;instruct the compiler to ignore its default behavior."/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="21" posx="581.859375" posy="622.71875" width="299" height="70" side="right" fold="false" treesize="112" color="#715344" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="399" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="399">
            <text data="Casting can appear anywhere in an&#10;expression, not just on the assignment."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="22" posx="980.859375" posy="613.71875" width="563" height="88" side="right" fold="false" treesize="112" color="#715344" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="532" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="536.15104166666663">
                <text data="`short mouse = 10;&#10;short hamster = 3;&#10;short capybara = (short)mouse * hamster;// DOES NOT COMPILE`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="23" posx="1643.859375" posy="601.71875" width="560" height="112" side="right" fold="false" treesize="112" color="#715344" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="532" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="532">
                    <text data="The cast in the last line is applied to `mouse`, and `mouse` alone. After the cast is complete, both operands are promoted to `int` since they are used with the binary multiplication operator (`*`), making the result an `int` and causing a compiler error."/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="24" posx="2303.859375" posy="601.71875" width="639" height="112" side="right" fold="false" treesize="112" color="#715344" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="651" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="658.89322916666663">
                        <text data="What if we changed the last line to the following?&#10;`short capybara = 1+(short)(mouse*hamster); // DOES NOT COMPILE`&#10;In the example, casting is performed successfully, but the resulting value is automatically promoted to `int` because it is used with the binary arithmetic operator (`+`)."/>
                      </nodename>
                      <nodenote></nodenote>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="25" posx="581.859375" posy="759.21875" width="382" height="91" side="right" fold="false" treesize="182" color="#333333" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="363" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="362.34635416666663">
            <text data="**Casting Values vs. Variables**&#10;The compiler doesn&#x2019;t require casting when working with literal values that fit into the data type. "/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="26" posx="1063.859375" posy="751.71875" width="217" height="106" side="right" fold="false" treesize="182" color="#333333" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="363" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="363">
                <text data="`byte hat = 1;&#10;byte gloves = 7 * 10;&#10;short scarf = 5;&#10;short boots = 2 + 1;`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="27" posx="1380.859375" posy="759.21875" width="367" height="91" side="right" fold="false" treesize="182" color="#333333" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="363" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="363">
                    <text data="All of these statements compile without issue. On the other hand, neither of these statements compiles:"/>
                  </nodename>
                  <nodenote></nodenote>
                  <nodes>
                    <node id="28" posx="1847.859375" posy="760.71875" width="410" height="88" side="right" fold="false" treesize="182" color="#333333" colorroot="false" summarized="false" layout="Horizontal" group="false">
                      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="399" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                      <nodename maxwidth="400.18229166666663">
                        <text data="`short boots = 2 + hat; // DOES NOT COMPILE&#10;byte gloves = 7 * 100; // DOES NOT COMPILE&#10;short boots2 = boots; // COMPILES`"/>
                      </nodename>
                      <nodenote></nodenote>
                      <nodes>
                        <node id="29" posx="2357.859375" posy="713.71875" width="426" height="91" side="right" fold="false" treesize="91" color="#333333" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="399" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="399">
                            <text data="The first statement does not compile because `hat` is a variable, not a value, and both operands are automatically promoted to `int`. "/>
                          </nodename>
                          <nodenote></nodenote>
                        </node>
                        <node id="30" posx="2357.859375" posy="804.71875" width="407" height="91" side="right" fold="false" treesize="91" color="#333333" colorroot="false" summarized="false" layout="Horizontal" group="false">
                          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="longdash" nodeborder="underlined" nodewidth="399" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                          <nodename maxwidth="399">
                            <text data="The second expression does not compile because `700`&#10;triggers an overflow for `byte`, which has a maximum value of `127`."/>
                          </nodename>
                          <nodenote></nodenote>
                        </node>
                      </nodes>
                    </node>
                  </nodes>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <stickers/>
  <nodelinks id="0"/>
</minder>
