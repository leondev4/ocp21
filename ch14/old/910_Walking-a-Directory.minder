<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="691923596" etag="1064778329">
  <theme name="default" label="Light" index="3"/>
  <styles>
    <style level="0" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="rounded" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="208.908203125" posy="463.658203125" width="224" height="69" side="right" fold="false" treesize="873" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="400">
        <text data="**Walking a Directory**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="1" posx="532.908203125" posy="99.158203125" width="531" height="69" side="right" fold="false" treesize="144" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="498.568359375">
            <text data="The `Files` class includes two methods for walking the directory tree "/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="2" posx="1163.908203125" posy="61.658203125" width="588" height="144" side="right" fold="false" treesize="144" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="539" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="542.12109375">
                <text data="`public static Stream&lt;Path&gt;**walk(**Path start,&#10;    FileVisitOption... options) throws IOException&#10;&#10;public static Stream&lt;Path&gt; walk(Path start,**int maxDepth**,&#10;    FileVisitOption... options) throws IOException`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="3" posx="1851.908203125" posy="78.158203125" width="492" height="111" side="right" fold="false" treesize="111" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="472" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="459.953125">
                    <text data="The first `walk()` method relies on a default maximum depth of `Integer.MAX_VALUE`, while the overloaded version allows the user to set a maximum depth."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="4" posx="532.908203125" posy="379.658203125" width="510" height="90" side="right" fold="false" treesize="438" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="494">
            <text data="The following `getPathSize()` method walks a directory tree and returns the total size of all the files in the directory:"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="5" posx="1142.908203125" posy="205.658203125" width="705" height="306" side="right" fold="false" treesize="306" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="651" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="659.40990188953492">
                <text data="`private long getSize(Path p) {&#10;  try {&#10;    return Files.size(p);&#10;  } catch (IOException e) {&#10;    throw new UncheckedIOException(e);&#10;  }&#10;}&#10;&#10;public long**getPathSize**(Path source) throws IOException {&#10;  try (var s =**Files.walk(source)**) {&#10;    return s.parallel()&#10;      .filter(p -&#xAD;&gt; !Files.isDirectory(p)).mapToLong(this::getSize).sum();&#10;  }&#10;}`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="6" posx="1947.908203125" posy="237.158203125" width="698" height="111" side="right" fold="false" treesize="111" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="651" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="651">
                    <text data="The `getSize()` helper method is needed because `Files.size()` declares `IOException`, and we&#x2019;d rather not put a `try/catch` block inside a lambda expression. Instead, we wrap it in the unchecked exception class `UncheckedIOException`."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
                <node id="7" posx="1947.908203125" posy="348.158203125" width="646" height="132" side="right" fold="false" treesize="132" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="651" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="651">
                    <text data="`var size=**getPathSize(Path.of(&quot;/fox/data&quot;));**&#10;System.out.format(&quot;Total Size: %.2f megabytes&quot;, (size/1000000.0));`&#10;          Depending on the directory you run this on, it will print something like this:&#10;`Total Size: 15.30 megabytes`"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
            <node id="8" posx="1142.908203125" posy="532.658203125" width="398" height="90" side="right" fold="false" treesize="132" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="651" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="651">
                <text data="**Applying a Depth Limit**&#10;`try(var s = Files.walk(source,**5**)){`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="9" posx="1640.908203125" posy="511.658203125" width="694" height="132" side="right" fold="false" treesize="132" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="651" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="651">
                    <text data="This new version checks for files only within 5 steps of the starting node. A depth value&#10;of `0` indicates the current path itself. Since the method calculates values only on files, you&#x2019;d&#10;have to set a depth limit of at least `1` to get a nonzero result when this method is applied to a&#10;directory tree."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="10" posx="532.908203125" posy="643.658203125" width="249" height="69" side="right" fold="false" treesize="69" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="494">
            <text data="**Avoiding Circular Paths**"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="11" posx="532.908203125" posy="757.658203125" width="526" height="132" side="right" fold="false" treesize="222" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="494">
            <text data="Many of our earlier NIO.2 methods traverse symbolic links by default, with a `NOFOLLOW_LINKS` used to disable this behavior. The `walk()` method is different in that it does **not follow symbolic links** by &#10;default and requires the `FOLLOW_LINKS` option to be enabled."/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="12" posx="1158.908203125" posy="723.158203125" width="403" height="111" side="right" fold="false" treesize="132" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="494" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="494">
                <text data="To enable following symbolic links:&#10;`try(var s=Files.walk(source,&#10;    **FileVisitOption.FOLLOW_LINKS**)){`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="13" posx="1661.908203125" posy="712.658203125" width="657" height="132" side="right" fold="false" treesize="132" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="611" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="614.45039970930236">
                    <text data="When traversing a directory tree, your program needs to be careful of symbolic links, if&#10;enabled. For example, if our process comes across a symbolic link that points to the root&#10;directory of the file system, every file in the system will be searched!&#10;Worse yet, a symbolic link could lead to a cycle in which a path is visited repeatedly. "/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
            <node id="14" posx="1158.908203125" posy="844.658203125" width="688" height="90" side="right" fold="false" treesize="90" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="669" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="672.32990552325589">
                <text data="Be aware that when the `FOLLOW_LINKS` option is used, the `walk()` method will track all&#10;of the paths it has visited, throwing a `FileSystemLoopException` if a path is visited twice."/>
              </nodename>
              <nodenote></nodenote>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <stickers/>
  <nodelinks id="0"/>
</minder>
