<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="2545156763" etag="4041133391">
  <theme name="default" label="Light" index="2"/>
  <styles>
    <style level="0" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="rounded" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="830" posy="545" width="294" height="69" side="left" fold="false" treesize="843" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="400">
        <text data="**Manipulating Input Streams***"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="2" posx="1224" posy="242" width="466" height="144" side="right" fold="false" treesize="312" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="429" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="430.3671875">
            <text data="`// InputStream and Reader&#10;public boolean**markSupported()**&#10;public void**mark(int readLimit)**&#10;public void**reset() throws IOException**&#10;public long**skip(long n) throws IOException**`"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="3" posx="1790" posy="213.5" width="447" height="111" side="right" fold="false" treesize="222" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="429" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="429">
                <text data="`mark()` and `reset()` return an I/O stream to an earlier position. Before you should call the `markSupported()`, which returns `true` only if `mark()` is supported."/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="5" posx="2337" posy="158" width="496" height="90" side="right" fold="false" treesize="90" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="480" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="484.73828125">
                    <text data="Make sure to call `markSupported()` on the I/O stream before calling these methods, or an exception will be thrown at runtime."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
                <node id="6" posx="2337" posy="248" width="517" height="132" side="right" fold="false" treesize="132" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="480" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="480">
                    <text data="`mark()` and `reset()` are not putting the data back into the&#10;I/O stream but are storing the data in a temporary buffer in memory to be read again. **You should not call the `mark()` operation with too large a value, as this could take up a lot of memory.**"/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
            <node id="4" posx="1790" posy="380" width="476" height="90" side="right" fold="false" treesize="90" color="#f37329" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="429" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="429">
                <text data="The `skip()` method basically reads data from the I/O stream and discards the contents (discards `n` characters)."/>
              </nodename>
              <nodenote></nodenote>
            </node>
          </nodes>
        </node>
        <node id="1" posx="1224" posy="599" width="181" height="69" side="right" fold="false" treesize="327" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="400">
            <text data="**Marking Data**"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="7" posx="1505" posy="470" width="659" height="327" side="right" fold="false" treesize="327" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="612" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="615.109375">
                <text data="Assume that we have an `InputStream` instance whose next values are `LION`. Consider the following code snippet:`&#10;&#10;public void readData(InputStream is) throws IOException {&#10;  System.out.print((char) is.read()); // L&#10;  if(**is.markSupported()**) {&#10;  **is.mark(100);** // Marks up to 100 bytes&#10;    System.out.print((char) is.read()); // I&#10;    System.out.print((char) is.read()); // O&#10;  **is.reset();**// Resets stream to position before I&#10;  }&#10;  System.out.print((char) is.read()); // I&#10;  System.out.print((char) is.read()); // O&#10;  System.out.print((char) is.read()); // N&#10;}`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="8" posx="2264" posy="522.5" width="632" height="69" side="right" fold="false" treesize="69" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="612" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="612">
                    <text data="The code snippet will output `LIOION` if `mark()` is supported and `LION` otherwise."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
                <node id="9" posx="2264" posy="591.5" width="663" height="153" side="right" fold="false" treesize="153" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="613" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="615.173828125">
                    <text data="What about the value of `100` that we passed to the `mark()` method? This value is called&#10;the `readLimit`. It instructs the I/O stream that we expect to call `reset()` after at most&#10;`100` bytes. If our program calls `reset()` (throws `IOException`) after reading more than `100` bytes from calling `mark(100)`, it may throw an exception, depending on the I/O stream class."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
        <node id="10" posx="1224" posy="864.5" width="181" height="69" side="right" fold="false" treesize="204" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="400" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="400">
            <text data="**Skipping Data**"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="11" posx="1505" posy="797" width="643" height="204" side="right" fold="false" treesize="204" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="587" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="598.931640625">
                <text data="Assume that we have an InputStream instance whose next values are TIGERS. Consider&#10;the following code snippet:&#10;`&#10;System.out.print ((char)is.read()); // T&#10;**is.skip(2);** // Skips I and G (throws IOException)&#10;is.read(); // Reads E but doesn't output it; like **skip(1)**&#10;System.out.print((char)is.read()); // R&#10;System.out.print((char)is.read()); // S`"/>
              </nodename>
              <nodenote></nodenote>
              <nodes>
                <node id="12" posx="2248" posy="812" width="627" height="174" side="right" fold="false" treesize="174" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
                  <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="shortdash" nodeborder="underlined" nodewidth="587" nodeborderwidth="4" nodefill="false" nodemargin="18" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
                  <nodename maxwidth="587">
                    <text data="This code prints `TRS` at runtime. We skipped two characters, `I` and `G`. We also read `E` but didn&#x2019;t use it anywhere, so it behaved like calling `skip(1)`.&#10;The return value of `skip()` tells us how many values were skipped. For example, if we are near the end of the I/O stream and call `skip(1000)`, the return value might be `20`, indicating that the end of the I/O stream was reached after `20` values were skipped."/>
                  </nodename>
                  <nodenote></nodenote>
                </node>
              </nodes>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <stickers/>
  <nodelinks id="0"/>
</minder>
