<?xml version="1.0"?>
<minder version="1.16.2" parent-etag="3079350343" etag="916097453">
  <theme name="default" label="Light" index="-1"/>
  <styles>
    <style level="0" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="10" nodepadding="10" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="1" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="2" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="3" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="4" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="5" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="6" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="7" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="8" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="9" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
    <style level="10" isset="true" branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true" connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100" calloutfont="Sans 12" calloutpadding="5" calloutptrwidth="20" calloutptrlength="20"/>
  </styles>
  <images/>
  <nodes>
    <node id="0" posx="954.03124999999989" posy="339.0546875" width="210" height="70" side="left" fold="false" treesize="504" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Creating a Comparable Class**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="20" posx="371.03125" posy="160.5546875" width="483" height="427" side="left" fold="false" treesize="427" color="#7a36b1" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="451" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="459.02604166666674">
            <text data="import java.util.*;&#10;public class Duck implements **Comparable&lt;Duck&gt;** {&#10;   private String name;&#10;   public Duck(String name) {&#10;      this.name = name;&#10;   }&#10;   public String toString() {   // use readable output&#10;      return name;&#10;   }&#10;   public int **compareTo**(Duck d) {&#10;      return name.compareTo(d.name); // sorts ascendingly by name&#10;  }&#10;   public static void main(String[] args) {&#10;      var ducks = new ArrayList&lt;Duck&gt;();&#10;      ducks.add(new Duck(&quot;Quack&quot;));&#10;      ducks.add(new Duck(&quot;Puddles&quot;));&#10;      **Collections.sort(**ducks);// sort by name&#10;      System.out.println(ducks);// [Puddles, Quack]&#10;}}"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="14" posx="1264.03125" posy="122.0546875" width="342" height="91" side="right" fold="false" treesize="91" color="#333333" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="324" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="324">
            <text data="`Collections.sort()`, returns `void`because the method parameter is what gets sorted; it must implement `Comparable`"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="5" posx="1264.03125" posy="216.0546875" width="338" height="106" side="right" fold="false" treesize="112" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="324" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="324">
            <text data="`public interface **Comparable&lt;T&gt;** {&#10;   int compareTo(T o);&#10;}`"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="6" posx="1702.03125" posy="213.0546875" width="366" height="112" side="right" fold="false" treesize="112" color="#68b723" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="342" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="342">
                <text data="The generic `T` lets you implement this method and specify the type of your object. This lets you avoid a cast when implementing `compareTo()`. Any object can be `Comparable`."/>
              </nodename>
              <nodenote></nodenote>
            </node>
          </nodes>
        </node>
        <node id="21" posx="1264.03125" posy="325.0546875" width="350" height="91" side="right" fold="false" treesize="91" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="324" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="324">
            <text data="In `Collections.sort(Collection&lt;T&gt;)` `T` must implement `Comparable` if  does not, compile error."/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="7" posx="1264.03125" posy="486.0546875" width="149" height="70" side="right" fold="false" treesize="210" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="324" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="324">
            <text data="`compareTo` or &#10;`compare`returns"/>
          </nodename>
          <nodenote></nodenote>
          <nodes>
            <node id="8" posx="1513.03125" posy="416.0546875" width="330" height="70" side="right" fold="false" treesize="70" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="324" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="324">
                <text data="Negative number when the current object is smaller than the argument"/>
              </nodename>
              <nodenote></nodenote>
            </node>
            <node id="9" posx="1513.03125" posy="486.0546875" width="349" height="70" side="right" fold="false" treesize="70" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="324" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="324">
                <text data="zero (`0`)  when the current object is equivalent to the agument"/>
              </nodename>
              <nodenote></nodenote>
            </node>
            <node id="10" posx="1513.03125" posy="556.0546875" width="323" height="70" side="right" fold="false" treesize="70" color="#3689e6" colorroot="false" summarized="false" layout="Horizontal" group="false">
              <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="pilled" nodewidth="324" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
              <nodename maxwidth="324">
                <text data="Positive number when the current object is larger than the argument"/>
              </nodename>
              <nodenote></nodenote>
            </node>
          </nodes>
        </node>
      </nodes>
    </node>
    <node id="1" posx="1006.6953124999999" posy="-79.10546875" width="103" height="49" side="left" fold="false" treesize="266" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Order**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="2" posx="1209.6953125" posy="-187.60546875" width="364" height="70" side="right" fold="false" treesize="70" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="348" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="348">
            <text data="With `String`: Numbers sort before letters, then uppercase and lowercase letters"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="4" posx="1209.6953125" posy="-117.60546875" width="353" height="196" side="right" fold="false" treesize="196" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="327" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="327">
            <text data="You can also sort objects that you create yourself. Java provides an interface called&#10;`Comparable`. If your class implements `Comparable`, it can be used in data structures that require comparison. There is also an interface called `Comparator`, which is used to specify that you want to use a different order than the object itself provides."/>
          </nodename>
          <nodenote></nodenote>
        </node>
      </nodes>
    </node>
    <node id="12" posx="938.23307291666572" posy="941.51432291666674" width="213" height="70" side="left" fold="false" treesize="616" summarized="false" layout="Horizontal" group="false">
      <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="underlined" nodewidth="200" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
      <nodename maxwidth="200">
        <text data="**Comparing Data with a `Comparator`**"/>
      </nodename>
      <nodenote></nodenote>
      <nodes>
        <node id="18" posx="355.23307291666561" posy="668.51432291666674" width="483" height="616" side="left" fold="false" treesize="616" color="#f9c440" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="463" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="465.75520833333331">
            <text data="import java.util.ArrayList;&#10;import java.util.Collections;&#10;**import java.util.Comparator;**&#10;public class Duck implements **Comparable&lt;Duck&gt;** {&#10;   private String name;&#10;   private int weight;   &#10;   public Duck(String name) {&#10;      this.name = name;&#10;   }&#10;   public String toString() {   // use readable output&#10;      return name;&#10;   }&#10;   public int **compareTo**(Duck d) {&#10;      return name.compareTo(d.name); &#10;  }&#10;   public static void main(String[] args) {&#10;      **Comparator&lt;Duck&gt; byWeight = (d1, d2) -&gt; d1.getWeight()-&#xAD;d2.getWeight()**;&#10;           //**Comparator&lt;Duck&gt; byWeight= Comparator.comparing(Duck::getWeight);**&#10;      var ducks = new ArrayList&lt;Duck&gt;();&#10;      ducks.add(new Duck(&quot;Quack&quot;));&#10;      ducks.add(new Duck(&quot;Puddles&quot;));&#10;      **Collections.sort(**ducks);// sort by name&#10;      System.out.println(ducks);// [Puddles, Quack]&#10;      Collections.**sort(ducks, byWeight)**;&#10;      System.out.println(ducks); // [Quack, Puddles]&#10;}}"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="13" posx="1251.2330729166656" posy="888.51432291666674" width="338" height="106" side="right" fold="false" treesize="106" color="#715344" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="320" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="320">
            <text data="`public interface **Comparator&lt;T&gt;** {&#10;    int compare(T o1, T o2);&#10;}`"/>
          </nodename>
          <nodenote></nodenote>
        </node>
        <node id="15" posx="1251.2330729166656" posy="994.51432291666674" width="396" height="70" side="right" fold="false" treesize="70" color="#c6262e" colorroot="false" summarized="false" layout="Horizontal" group="false">
          <style branchmargin="100" branchradius="25" linktype="curved" linkwidth="4" linkarrow="false" linkdash="solid" nodeborder="rounded" nodewidth="396" nodeborderwidth="4" nodefill="false" nodemargin="8" nodepadding="6" nodefont="Sans 11" nodemarkup="true"/>
          <nodename maxwidth="414.32421875">
            <text data="You use: `Collections.sort(Collection,Comparator);`"/>
          </nodename>
          <nodenote></nodenote>
        </node>
      </nodes>
    </node>
  </nodes>
  <groups/>
  <connections>
    <connection from_id="13" to_id="7" drag_x="1349.6197916666658" drag_y="716.41927083333348">
      <style connectiondash="dotted" connectionlwidth="2" connectionarrow="fromto" connectionpadding="3" connectionfont="Sans 10" connectiontwidth="100"/>
      <title></title>
      <note></note>
    </connection>
  </connections>
  <stickers/>
  <nodelinks id="0"/>
</minder>
